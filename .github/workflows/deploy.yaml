# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/GoogleCloudPlatform/github-actions/tree/master/example-workflows/gke

name: Build and Deploy to GKE

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: gebla-website
  GKE_ZONE: europe-north1-a
  DEPLOYMENT_NAME: gebla

jobs:
  up-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version
        id: tag
        run: |
          packageVersion=$(cat ./package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
          echo "::set-output name=tag::$packageVersion"
#      # Setup gcloud CLI
#      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@v0.2.0
#        with:
#          service_account_key: ${{ secrets.GKE_SA_KEY }}
#          project_id: ${{ secrets.GKE_PROJECT }}
#
#      # Configure Docker to use the gcloud command-line tool as a credential
#      # helper for authentication
#      - run: |-
#          gcloud --quiet auth configure-docker
#      # Get the GKE credentials so we can deploy to the cluster
#      - run: |-
#          gcloud container clusters get-credentials gebla-website --zone europe-north1-a
      # Build the Docker image
      - name: Build
        env:
          BUILDVERSION: ${{ steps.tag.outputs.tag }}
        run: |-
          make build -e
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Push the Docker image to Docker Hub
      - name: Publish
        env:
          BUILDVERSION: ${{ steps.tag.outputs.tag }}
        run: |-
          make push -e
      # Set up kustomize
#      - name: Set up Kustomize
#        run: |-
#          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
#          chmod u+x ./kustomize
#      # Deploy the Docker image to the GKE cluster
#      - name: Deploy
#        run: |-
#          sed -i 's/VERSION/${{steps.tag.outputs.tag}}/g' deployment.yaml
#          ./kustomize build . | kubectl apply -f -
#          kubectl rollout status deployment/gebla-website
#          kubectl get services -o wide